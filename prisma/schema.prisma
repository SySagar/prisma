// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  // id      Int @id @default(autoincrement())
  id             String          @id @default(uuid())
  name           String
  email          String          @unique
  isAdmin        Boolean?
  age            Int
  // role           Role            @default(BASIC)
  // preferences Json
  //blog    Unsupported("")    //this is to mark that it is not supported in prisma
  writtenposts   Post[]          @relation("WrittenPosts")
  favposts       Post[]          @relation("FavPosts")

   userPreference         UserPreference ?    @relation(onDelete: Cascade,fields: [userPreferenceId], references: [id])
  userPreferenceId       String?  @unique

  @@unique([age, name]) //cannot have two users with same name and age
  @@index([email])
}

//one to one
model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
   user User?
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  rating        Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favby         User?      @relation("FavPosts", fields: [authorId], references: [id])
  favById       String?
  categories    Category[]
}

//This here is a many to many reln
model Category {
  id    String @id @default(uuid())
  posts Post[]
  name  String @unique
}

// enum Role {
//   BASIC
//   ADMIN
// }
